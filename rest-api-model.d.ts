/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   rest-api-model.js
 */


// tslint:disable:variable-name Describing an API that's defined elsewhere.
// tslint:disable:no-any describes the API as best we are able today

import {ArcBaseModel} from './base-model.js';

export {RestApiModel};

declare namespace LogicElements {

  /**
   * Events based access to REST APIs datastore.
   */
  class RestApiModel extends ArcBaseModel {

    /**
     * A handler to the datastore. Contains listing data.
     *    
     */
    readonly indexDb: any;

    /**
     * A handler to the datastore containing REST API data
     * (AMF model).
     *    
     */
    readonly dataDb: any;

    /**
     * @param dbname Name of the data store
     * @param revsLimit Limit number of revisions on the data store.
     */
    constructor(dbname: String|null, revsLimit: Number|null);
    _attachListeners(node: any): void;
    _detachListeners(node: any): void;

    /**
     * Reads an entry from the index datastore.
     *
     * @param id The ID of the datastore entry.
     * @param rev Specific revision to read. Defaults to latest revision.
     * @returns Promise resolved to a project object.
     */
    readIndex(id: String|null, rev: String|null): Promise<any>|null;

    /**
     * Reads an entry from the raml data datastore.
     *
     * @param id The ID of the datastore entry.
     * @param rev Specific revision to read. Defaults to latest revision.
     * @returns Promise resolved to a project object.
     */
    readData(id: String|null, rev: String|null): Promise<any>|null;

    /**
     * Creates / updates API data object.
     *
     * @param indexId Id of the index object
     * @param version Version of the API data
     * @param data AMF model to store
     * @returns Resolved promise to a document with updated `_rev`
     */
    updateData(indexId: String|null, version: String|null, data: object|null): Promise<any>|null;

    /**
     * Creates / updates API index object.
     * The `_id` property must be already set on the object.
     *
     * This function fires `api-index-changed` custom event on success.
     *
     * @param doc PouchDB document.
     * @returns Resolved promise to a document with updated `_rev`
     */
    updateIndex(doc: object|null): Promise<any>|null;

    /**
     * Updates many index objects in one request.
     *
     * @param docs List of PouchDB documents to update.
     * @returns Resolved promise to a list of document with updated `_rev`
     */
    updateIndexBatch(docs: Array<object|null>|null): Promise<any>|null;

    /**
     * Removes all AMF and index data from datastores for given index id.
     *
     * @param id Index entry ID to delete.
     * @returns Promise resolved to a new `_rev` property of deleted object.
     */
    remove(id: String|null): Promise<any>|null;

    /**
     * Removes information about version from AMD data datastore and from index
     * data.
     *
     * @param id Index object ID
     * @param version Version to remove.
     */
    removeVersion(id: String|null, version: String|null): Promise<any>|null;

    /**
     * Removes versions of API data in bulk operation.
     *
     * @param indexId Index object ID
     * @param versions List of versions to remove.
     */
    removeVersions(indexId: String|null, versions: Array<String|null>|null): Promise<any>|null;
    _removeVersions(ids: any): any;
    _removeVersion(id: any): any;

    /**
     * Lists index data.
     *
     * ### QueryResultObject
     * - `data` {Array<Object>} List of PouchDB documents read from the datastore
     * - `nextPageToken` {String} Pagination string to be used with next call
     * to get resutls for a next page. The nextPageToken don't change over
     * subsequent requests.
     *
     * @param opts Query options:
     * - nextPageToken {String} Received from previous query page token.
     * @returns A promise resolved to a query result object on success.
     */
    listIndex(opts: object|null): Promise<any>|null;

    /**
     * Generates `nextPageToken` as a random string.
     *
     * @returns Random 32 characters long string.
     */
    _makeNextPageToken(): String|null;

    /**
     * A handler for `api-index-changed` custom event.
     */
    _indexChangeHandler(e: CustomEvent|null): void;

    /**
     * Handler for the `api-data-read` custom event.
     *
     * Event `detail` object must contain the `id` property with datastore entry
     * id and may contain a `rev` property to read a specific revision.
     *
     * It sets a `result` property on the event `detail` object that is a
     * promise returned by `readData()` function.
     */
    _readHandler(e: CustomEvent|null): void;
    _readIndexHandler(e: any): void;

    /**
     * Handler for the `api-data-changed` custom event.
     */
    _dataUpdateHandler(e: CustomEvent|null): void;

    /**
     * Deletes the object from the datastores.
     * It is only handled if the event in cancelable and not cancelled.
     *
     * Event has to have `id` property set on the detail object.
     *
     * It sets `result` property on the event detail object with a result of
     * calling `remove()` function.
     */
    _deletedHandler(e: CustomEvent|null): void;
    _versionDeletedHandler(e: any): void;

    /**
     * Handler for the `api-index-changed-batch` custom event.
     * It requires to have `items` property set to event detail as an array of
     * PouchDB documents to update.
     *
     * It sets `result` property on the event detail object with a result of
     * calling `updateIndexBatch()` function.
     */
    _indexesUpdatedHandler(e: CustomEvent|null): void;

    /**
     * Handler for the `api-index-list` custom event.
     */
    _indexListHandler(e: CustomEvent|null): void;
  }
}

declare global {

  interface HTMLElementTagNameMap {
    "rest-api-model": LogicElements.RestApiModel;
  }
}
